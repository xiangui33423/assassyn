on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  ASSASSYN_APPTAINER: apptainer exec --no-home --bind ${{ github.workspace }}:/workspace assassyn.sif

name: Test (Apptainer)

jobs:
  test:
    name: Test (Apptainer)
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Restore Base Container Cache
        id: cache-base-container
        uses: actions/cache@v4
        with:
          path: |
            vm/apptainer/assassyn-base.sif
          key: ${{ runner.os }}-apptainer-base-container-${{ hashFiles('vm/apptainer/assassyn-base.def') }}

      - name: Build Base Container
        if: steps.cache-base-container.outputs.cache-hit != 'true'
        run: |
          echo "Base container cache miss, building base container"
          make build-apptainer-base

      - name: Build Repository Container
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            REPO_NAME="${{ github.event.pull_request.head.repo.full_name }}"
            COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
            echo "Building container with PR repository: $REPO_NAME at commit $COMMIT_SHA"
          else
            REPO_NAME="${{ github.repository }}"
            COMMIT_SHA="${{ github.sha }}"
            echo "Building container with repository: $REPO_NAME at commit $COMMIT_SHA"
          fi
          make build-apptainer REPO_URL=https://github.com/$REPO_NAME REPO_TAG=$COMMIT_SHA

      - name: Run Container Tests
        run: |
          cd vm/apptainer
          apptainer test assassyn.sif

      - name: Cleanup Containers
        if: always()
        run: |
          echo "Cleaning up containers"
          rm -f vm/apptainer/assassyn.sif
          rm -f vm/apptainer/assassyn-base.sif
          echo "Cleaned up all containers"
